# -*- coding: utf-8 -*-
"""Cement EDA

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1V254WGErdjULoynul2blSlT3Jy3ETAbC

### Overview Dataset

"Data Pembuatan Semen (Cement Manufacturing)"

Beton merupakan material terpenting dalam teknik sipil. Kuat tekan beton adalah fungsi yang sangat nonlinier dari umur dan bahan. Bahan-bahan tersebut antara lain semen, terak tanur tinggi, fly ash, air, superplasticizer, agregat kasar, dan agregat halus. Dataset ini berisi data mengenai kekuatan semen, bahan penyusun dan waktu campuran.

Kekuatan tekan beton (MPa) untuk campuran tertentu di bawah umur tertentu (hari) ditentukan dari informasi laboratorium. Data ini merupakan data (tidak diskalakan). Data memiliki 8 variabel input kuantitatif, dan 1 variabel output kuantitatif, dan 1030 kejadian (pengamatan).

# Unsur-Unsur yang digunakan dalam Analisa ini :

* [Histogram](#1)
* [Outliers](#2)
* [Box Plot ](#3)
* [Summary Statistics](#4)
* [Relationship Between Variables](#5)
* [Correlation](#6)
* [Covariance](#7)
* [Pearson Correlation](#8)
* [Spearman's Rank Correlation](#9)
* [Mean VS Median](#10)
* [Hypothesis Testing](#11)

# Sumber Dataset :     
https://raw.githubusercontent.com/supasonicx/ATA-praktikum-01/main/concrete.csv

# Mengimport Libary
"""

# import libraries
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from pandas.plotting import autocorrelation_plot
from scipy import stats
plt.style.use("ggplot")
import warnings
warnings.filterwarnings("ignore")
from scipy import stats

"""## Membaca Dataset"""

# read data as pandas data frame
source = r'https://raw.githubusercontent.com/supasonicx/ATA-praktikum-01/main/concrete.csv'
data = pd.read_csv(source)

## Melihat 5 baris awal dari dataset yang digunakan
data.head()

## Melihat dimensi dataset
print("bentuk :")
data.shape

## Melihat kolom dataset
print('kolom :')
data.columns

print("mean strength :",data['strength'].mean())

"""<a id="1"></a> <br>
## Histogram

* Menampilkan Berapa kali (frekueni) setiap nilai muncul dalam kumpulan data.
* Jenis deskripsi ini disebut distribusi variabel
* Cara paling umum untuk merepresentasikan distribusi variabel adalah histogram yaitu grafik yang menunjukkan frekuensi dari setiap nilai.
* Frequency = berapa kali setiap nilai muncu
* Contoh: [1,1,1,1,2,2,2]. Frequency dari 1 adalah empat dan frequency dari 2 adalah tiga.
"""

plt.figure(figsize=(10, 10))
sns.set(style='whitegrid')
sns.displot(data['strength'], color='b', bins=50, kde=True, alpha=0.5)
plt.title("Histogram dari Kolom Strength")
plt.show()

"""<a id="3"></a> <br>
## Box Plot
* Anda dapat melihat outlier juga dari box plot
* Temukan outlier pada dataset ini
"""

## Buatlah histogram dari kolom strength
plt.figure(figsize=(13, 5))
sns.boxplot(data)
plt.title("BoxPlot Data")
plt.show()

"""<a id="4"></a> <br>
## Summary Statistics
* Mean/rata-rata
* Variance: penyebaran distribusi
* Standart deviation square root dari variance
* Mari kita lihat ringkasan statistik rata-rata pancaran tumor jinak:
"""

## Hitung karakteristik data dari masing-masing kolom dengan menggunakan perintah describe.
data.describe()

"""<a id="7"></a> <br>
## Relationship Between Variables
* Kita dapat mengatakan bahwa dua variabel terkait satu sama lain, jika salah satunya memberikan informasi tentang yang lain
* Misalnya, harga dan jarak. Jika Anda pergi jarak jauh dengan taksi Anda akan membayar lebih. Oleh karena itu kita dapat mengatakan bahwa harga dan jarak berhubungan positif satu sama lain.
* Scatter Plot, Cara termudah untuk memeriksa hubungan antara dua variabel
* Mari kita lihat hubungan antara radius mean dan mean area
* Di scatter plot Anda dapat melihat bahwa ketika radius mean meningkat, mean area juga meningkat. Oleh karena itu, mereka berkorelasi positif satu sama lain.
* Tidak ada korelasi antara mean area dan dimensi fraktal se. Karena ketika mean area berubah, dimensi fraktal se tidak terpengaruh oleh peluang mean area
"""

# Tampilkan hubungan antara data kolom 'age' dan 'strength'
plt.figure(figsize=(13,10))
sns.scatterplot(x = 'age', y ='strength', data=data)
plt.title("Hubungan Data 'Age' dan 'Strength'")
plt.show()

# Tampilkan hubungan antara data kolom 'cement', 'slag','age' dan 'strength'
plt.figure(figsize=(10, 10))
sns.pairplot(data[['cement', 'slag','age', 'strength']])
plt.show()

"""<a id="8"></a> <br>
## Correlation
* Kekuatan hubungan antara dua variabel
* Mari kita lihat korelasi antara semua fitur.
"""

## Buatlah diagram heatmap dari setiap kolom yang ada dengan library seaborn
correlation = data.corr()
plt.figure(figsize=(10, 10))
sns.heatmap(correlation)
plt.title('heatmap dari korelasi matrix')
plt.show()

"""* Matriks besar yang mencakup banyak angka
* Kisaran angka ini adalah -1 hingga 1.
* Arti dari 1 adalah dua variabel yang saling berkorelasi positif seperti mean radius dan mean area
* Arti dari nol adalah tidak ada korelasi antara variabel seperti rata-rata radius dan fractal dimension se
* Arti dari -1 adalah dua variabel berkorelasi negatif satu sama lain seperti rata-rata radius dan mean/rata-rata fractal dimension.Sebenarnya korelasi antara keduanya bukan -1, melainkan -0,3 tetapi idenya adalah jika tanda korelasi negatif berarti ada adalah korelasi negatif.

<a id="9"></a> <br>
## Covariance
* Covariance adalah ukuran kecenderungan dua variabel untuk bervariasi bersama-sama
* Jadi covarians dimaksimalkan jika dua vektor identik
* Covarians adalah nol jika mereka ortogonal.
* Covariance negatif jika mereka menunjuk ke arah yang berlawanan
* Mari kita lihat kovarians antara mean radius dan mean area. Kemudian lihat radius mean dan fractal dimension se
"""

## Bandingkan nilai covariance dari data age, strength dan strength dan cement
cov_age_strength = data['age'].cov(data['strength'])
cov_strength_cement = data['strength'].cov(data['cement'])
print("Covariance Age-Strength : ", cov_age_strength)
print("Covariance Strength-Cement : ", cov_strength_cement)

"""<a id="10"></a> <br>
## Pearson Correlation
* Pembagian covarians dengan standar deviasi variabel
* Mari kita lihat korelasi pearson antara mean/rata-rata radius dan mean/rata-rata area
* Pertama mari kita gunakan metode .corr() yang sebenarnya kita gunakan pada bagian korelasi. Di bagian korelasi kami sebenarnya menggunakan korelasi pearson :)
* p1 dan p2 adalah sama. Di p1 kita menggunakan metode corr(), di p2 kita menerapkan definisi korelasi pearson (cov(A,B)/(std(A)*std(B)))
* Seperti yang kita harapkan korelasi pearson antara area_mean dan area_mean adalah 1 yang berarti bahwa mereka adalah distribusi yang sama
* Juga pearson correlation antara area_mean dan radius_mean adalah 0,98 yang berarti saling berkorelasi positif dan hubungan antar keduanya sangat tinggi.
* Untuk lebih jelas apa yang kami lakukan di bagian korelasi dan bagian korelasi pearson adalah sama.

"""

## Hitung nilai pearson correlation dari kolom data cement dan age
pc_cement_age = data['cement'].corr(data['age'], method = 'pearson')
print("Pearson Correlation Cement-Age : ", pc_cement_age)

"""<a id="11"></a> <br>
## Spearman's Rank Correlation
* Pearson correlation bekerja dengan baik jika hubungan antara variabel linier dan variabel kira-kira normal. Tapi itu tidak kuat, jika ada outlier
* Untuk menghitung korelasi spearman, kita perlu menghitung peringkat dari setiap nilai

"""

## Hitung nilai spearsman rank dari kolom data age dan strength
spearman_rank_correlation = data['age'].corr(data['strength'], method='spearman')
print("spearman's rank correlation Age-Strength",spearman_rank_correlation)

"""* Korelasi Spearman sedikit lebih tinggi dari korelasi pearson
    * Jika hubungan antar distribusi tidak linier, korelasi spearman cenderung lebih baik dalam memperkirakan kekuatan hubungan
    * Korelasi Pearson dapat dipengaruhi oleh outlier, sehingga jika data Anda memiliki outlier, maka teknik Korelasi Spearman's Rank dapat digunakan.

<a id="13"></a> <br>
## Hypothesis Testing
* Classical Hypothesis Testing / Pengujian Hipotesis Klasik
* Apa yang Anda perlu lakukan untuk menjawab pertanyaan berikut : "diberikan sampel dan efek nyata, berapa peluang melihat efek seperti itu secara kebetulan"
* Langkah pertama adalah mengukur ukuran efek nyata dengan memilih statistik uji. Pilihan alami untuk statistik uji adalah perbedaan mean/rata-rata antara dua kelompok.
* Langkah kedua adalah mendefinisikan hipotesis nol yaitu model sistem berdasarkan asumsi bahwa efek yang tampak tidak nyata. Hipotesis nol adalah jenis hipotesis yang digunakan dalam statistik yang menyatakan bahwa tidak ada signifikansi statistik dalam serangkaian pengamatan yang diberikan. Hipotesis nol adalah hipotesis yang orang mencoba untuk menyangkalnya. Hipotesis alternatif adalah hipotesis yang orang ingin mencoba untuk membuktikannya.
* Langkah ketiga adalah menghitung p-value yaitu probabilitas melihat efek nyata jika hipotesis nol benar. Misalkan kita memiliki uji hipotesis nol. Kemudian kita hitung nilai p. Jika nilai p kurang dari atau sama dengan ambang batas, kami menolak hipotesis nol.
* Jika p-value rendah, pengaruh tersebut dikatakan signifikan secara statistik artinya tidak mungkin terjadi secara kebetulan. Oleh karena itu kita dapat mengatakan bahwa efeknya lebih mungkin muncul pada populasi yang lebih besar.
* Mari kita coba contohkan. Hipotesis nol: dunia rata. Hipotesis alternatif: dunia itu bulat. Beberapa ilmuwan mulai menyangkal hipotesis nol. Ini akhirnya mengarah pada refleksi hipotesis nol dan penerimaan hipotesis alternatif.
* Contoh lainnya. "efek ini nyata" ini adalah hipotesis nol. Berdasarkan asumsi itu kami menghitung probabilitas efek yang tampak. Itu adalah nilai-p. Jika nilai p rendah, kami menyimpulkan bahwa hipotesis nol tidak mungkin benar.
* Sekarang mari kita buat contoh kita:
    * Saya ingin mengetahui apakah rata-rata radius dan rata-rata area terkait satu sama lain? Hipotesis nol saya adalah bahwa "hubungan antara rata-rata radius dan rata-rata area adalah nol pada populasi tumor'.
    * Sekarang kita perlu menyangkal hipotesis nol ini untuk menunjukkan bahwa mean/rata-rata radius dan mean/rata-rata area berhubungan. (walaupun sebenarnya kita telah mengetahui hasilnya berdasarkan analisa korelasi yang telah dilakukan sebelumnya)
    * mari kita cari nilai p (nilai probabilitas)
"""

## Lakukan hubungan hipotesis data antara kolom age dan strength
# hypotesis testing
# kalkulasi pearson correlation coefficient dan p-value
pearson_coef, p_value = stats.pearsonr(data['age'], data['strength'])

# menampilkan hasil
print("Koefisien Korelasi Pearson untuk 'Age'-'Strength': ", pearson_coef)
print('P-Value: ', p_value)

# menampilkan hasil dalam bentuk kalimat
if (p_value < 0.05):
    print("kita menolak hipotesis nol, dan menyimpulkan bahwa 'age' dan 'strength' berkorelasi.")
else:
    print("kita gagal menolak hipotesis nol, dan menyimpulkan bahwa 'age' dan 'strength'tidak berkorelasi.")

"""* Hasil perhitungan P values/ Nilai P hampir mendekati nol, sehingga kita dapat menolak hipotesis nol. Penolakan hipotesis ini memiliki arti nilai rata-rata age dan rata-rata strength pada data ini saling berpengaruh."""